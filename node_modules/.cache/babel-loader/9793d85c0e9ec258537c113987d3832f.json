{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const fetchAll = useCallback(async () => {\n    try {\n      const page = (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) || 0;\n      const response = await fetchWithCache(\"paginatedTransactions\", {\n        page: page\n      });\n      setPaginatedTransactions(previousResponse => {\n        if (response === null) {\n          return previousResponse;\n        }\n\n        return {\n          data: previousResponse ? [...previousResponse.data, ...response.data] : response.data,\n          nextPage: response.nextPage\n        };\n      });\n    } catch (error) {\n      console.error(\"Error fetching paginated transactions:\", error);\n    }\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"5C7xQHueO9nKLl+7c12EAAA+DoA=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","fetchAll","page","nextPage","response","previousResponse","data","error","console","invalidateData"],"sources":["/Users/dulat/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<Transaction[]> | null>(null)\n\n  const fetchAll = useCallback(async () => {\n    try {\n      const page = paginatedTransactions?.nextPage || 0\n      const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n        \"paginatedTransactions\",\n        {\n          page: page,\n        }\n      )\n\n      setPaginatedTransactions((previousResponse) => {\n        if (response === null) {\n          return previousResponse\n        }\n\n        return {\n          data: previousResponse ? [...previousResponse.data, ...response.data] : response.data,\n          nextPage: response.nextPage,\n        }\n      })\n    } catch (error) {\n      console.error(\"Error fetching paginated transactions:\", error)\n    }\n  }, [fetchWithCache, paginatedTransactions])\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAA0C,IAA1C,CAAlE;EAEA,MAAMO,QAAQ,GAAGR,WAAW,CAAC,YAAY;IACvC,IAAI;MACF,MAAMS,IAAI,GAAG,CAAAH,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEI,QAAvB,KAAmC,CAAhD;MACA,MAAMC,QAAQ,GAAG,MAAMP,cAAc,CACnC,uBADmC,EAEnC;QACEK,IAAI,EAAEA;MADR,CAFmC,CAArC;MAOAF,wBAAwB,CAAEK,gBAAD,IAAsB;QAC7C,IAAID,QAAQ,KAAK,IAAjB,EAAuB;UACrB,OAAOC,gBAAP;QACD;;QAED,OAAO;UACLC,IAAI,EAAED,gBAAgB,GAAG,CAAC,GAAGA,gBAAgB,CAACC,IAArB,EAA2B,GAAGF,QAAQ,CAACE,IAAvC,CAAH,GAAkDF,QAAQ,CAACE,IAD5E;UAELH,QAAQ,EAAEC,QAAQ,CAACD;QAFd,CAAP;MAID,CATuB,CAAxB;IAUD,CAnBD,CAmBE,OAAOI,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,wCAAd,EAAwDA,KAAxD;IACD;EACF,CAvB2B,EAuBzB,CAACV,cAAD,EAAiBE,qBAAjB,CAvByB,CAA5B;EAyBA,MAAMU,cAAc,GAAGhB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEM,IAAI,EAAEP,qBAAR;IAA+BD,OAA/B;IAAwCG,QAAxC;IAAkDQ;EAAlD,CAAP;AACD;;GAlCeb,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}